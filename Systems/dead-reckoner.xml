<?xml version="1.0"?>
 
<PropertyList>

	<!--
	   var ambientTemperatureKelvin = getprop("/environment/temperature-degc") + 273.15;
	   var MACH = getprop("/velocities/mach");
	   var TASKnots = 661.47 * MACH * math.sqrt(ambientTemperatureKelvin / 288.15);
	-->

	<!-- calculate true airspeed -->
	
    <filter>
    	<type>gain</type>
    	<gain>1</gain>
    	<input>
    		<expression>
    			<product>
    				<value>661.47</value>
    				<property>/velocities/mach</property>
	    			<sqrt>
	    				<div>
			    			<sum>
			    				<property>/environment/temperature-degc</property>
			    				<value>273.15</value>
			    			</sum>
			    			<value>288.15</value>
			    		</div>
		    		</sqrt>
		    	</product>
    		</expression>
    	</input>
    	<output>/velocities/tas-kt</output>
    </filter>
    
    <!-- distance travelled in one frame -->
    <filter>
    	<type>gain</type>
    	<gain>1</gain>
    	<input>
    		<expression>
    			<product>
    				<property>/velocities/tas-kt</property>
    				<property>/sim/time/delta-hour</property> <!-- calculated in gyro-compass.xml -->
    			</product>
    		</expression>
    	</input>
    	<output>/velocities/nm-per-frame</output>
    </filter>
    
    <!-- update distance and azimuth to fictional point based on distance travelled 
    (derived via KTAS above) and heading -->
    
    <!-- these first three filters calculate the bearing. positive is right. -->
    
    <filter>
    	<type>gain</type>
    	<gain>1</gain>
    	<input>
    		<expression>
    			<product>
    				<difference>
	    				<property>/instrumentation/gyro-compass/gyro-heading-deg</property>
	    				<property>/instrumentation/dead-reckoner/internal/azimuth</property>
	    			</difference>
	    			<value>-1</value>
    			</product>
    		</expression>
    	</input>
    	<output>/instrumentation/dead-reckoner/internal/bearing-to-azimuth</output>
    </filter>
    
    <filter>
    	<type>gain</type>
    	<gain>1</gain>
    	<enable>
    		<condition>
    			<less-than>
    				<property>/instrumentation/dead-reckoner/internal/bearing-to-azimuth</property>
    				<value>-180</value>
    			</less-than>
    		</condition>
    	</enable>
    	<input>
    		<expression>
    			<sum>
    				<property>/instrumentation/dead-reckoner/internal/bearing-to-azimuth</property>
    				<value>360</value>
	    		</sum>
    		</expression>
    	</input>
    	<output>/instrumentation/dead-reckoner/internal/bearing-to-azimuth</output>
    </filter>
    
    <filter>
    	<type>gain</type>
    	<gain>1</gain>
    	<enable>
    		<condition>
    			<greater-than>
    				<property>/instrumentation/dead-reckoner/internal/bearing-to-azimuth</property>
    				<value>180</value>
    			</greater-than>
    		</condition>
    	</enable>
    	<input>
    		<expression>
    			<difference>
    				<property>/instrumentation/dead-reckoner/internal/bearing-to-azimuth</property>
    				<value>360</value>
	    		</difference>
    		</expression>
    	</input>
    	<output>/instrumentation/dead-reckoner/internal/bearing-to-azimuth</output>
    </filter>
    
    <!-- calculate length of adjacent based on distance and bearing -->
    
	<filter>
    	<type>gain</type>
    	<gain>1</gain>
    	<input>
    		<expression>
    			<difference>
	    			<product>
	    				<cos>
	    					<deg2rad><property>/instrumentation/dead-reckoner/internal/bearing-to-azimuth</property></deg2rad>
	    				</cos>
	    				<property>/instrumentation/dead-reckoner/internal/distance</property>
	    			</product>
	    			<property>/velocities/nm-per-frame</property>
	    		</difference>
    		</expression>
    	</input>
    	<output>/instrumentation/dead-reckoner/internal/azimuth-adjacent-length</output>
    </filter>
    
    <!-- calculate length of opposite based on distance and bearing -->
    
    <filter>
    	<type>gain</type>
    	<gain>1</gain>
    	<input>
    		<expression>
    			<product>
    				<sin>
    					<deg2rad><property>/instrumentation/dead-reckoner/internal/bearing-to-azimuth</property></deg2rad>
    				</sin>
    				<property>/instrumentation/dead-reckoner/internal/distance</property>
    			</product>
    		</expression>
    	</input>
    	<output>/instrumentation/dead-reckoner/internal/azimuth-opposite-length</output>
    </filter>
    
    <!-- calculate new distance (hypotenuse) based on opposite and adjacent -->
    
    <filter>
    	<type>gain</type>
    	<gain>1</gain>
    	<input>
    		<expression>
                <sum>
        			<sum>
    	    			<rad2deg>
    		    			<atan2>
    		    				<property>/instrumentation/dead-reckoner/internal/azimuth-opposite-length</property>
    		    				<property>/instrumentation/dead-reckoner/internal/azimuth-adjacent-length</property>
    		    			</atan2>
    			    	</rad2deg>
    			    	<property>/instrumentation/gyro-compass/gyro-heading-deg</property>
    		    	</sum>
                    <property>/instrumentation/dead-reckoner/azimuth-adjust</property>
                </sum>
    		</expression>
    	</input>
    	<period>
    		<min>0</min>
    		<max>360</max>
    	</period>
    	<output>/instrumentation/dead-reckoner/internal/azimuth</output>
    </filter>
    
    <!-- calculate new distance to target point -->
    
    <filter>
        <type>gain</type>
        <gain>1</gain>
        <input>
            <expression>
                <sum>
                    <div>
                        <property>/instrumentation/dead-reckoner/internal/azimuth-opposite-length</property>
                        <sin>
                            <property>/instrumentation/dead-reckoner/internal/bearing-to-azimuth</property>
                        </sin>
                    </div>
                    <property>/instrumentation/dead-reckoner/distance-adjust</property>
                </sum>
            </expression>
        </input>
        <output>/instrumentation/dead-reckoner/internal/distance</output>
    </filter>

    <!-- overwrite the calculated entries if nav/dme is valid -->

    <filter>
        <type>gain</type>
        <gain>1</gain>
        <enable>
            <condition>
                <equals>
                    <property>/instrumentation/nav/data-is-valid</property>
                    <value>1</value>
                </equals>
                <equals>
                    <property>/instrumentation/nav/in-range</property>
                    <value>1</value>
                </equals>
            </condition>
        </enable>
        <input>
            <property>/instrumentation/nav/heading-deg</property>
        </input>
        <output>/instrumentation/dead-reckoner/internal/azimuth</output>
    </filter>

    <filter>
        <type>gain</type>
        <gain>1</gain>
        <enable>
            <condition>
                <or>
                    <and>
                        <equals>
                            <property>/instrumentation/nav/data-is-valid</property>
                            <value>1</value>
                        </equals>
                        <equals>
                            <property>/instrumentation/nav/in-range</property>
                            <value>1</value>
                        </equals>
                    </and>
                    <equals>
                        <property>/instrumentation/dead-reckoner/reset</property>
                        <value>1</value>
                    </equals>
                </or>
            </condition>
        </enable>
        <input>
            <value>0</value>
        </input>
        <output>/instrumentation/dead-reckoner/azimuth-adjust</output>
    </filter>

    <filter>
        <type>gain</type>
        <gain>1</gain>
        <enable>
            <condition>
                <equals>
                    <property>/instrumentation/nav/data-is-valid</property>
                    <value>1</value>
                </equals>
                <equals>
                    <property>/instrumentation/nav/in-range</property>
                    <value>1</value>
                </equals>
                <equals>
                    <property>/instrumentation/nav/dme-in-range</property>
                    <value>1</value>
                </equals>
            </condition>
        </enable>
        <input>
            <property>/instrumentation/dme/indicated-distance-nm</property>
        </input>
        <output>/instrumentation/dead-reckoner/internal/distance</output>
    </filter>
    
    <filter>
        <type>gain</type>
        <gain>1</gain>
        <enable>
            <condition>
                <or>
                    <and>
                        <equals>
                            <property>/instrumentation/nav/data-is-valid</property>
                            <value>1</value>
                        </equals>
                        <equals>
                            <property>/instrumentation/nav/in-range</property>
                            <value>1</value>
                        </equals>
                        <equals>
                            <property>/instrumentation/nav/dme-in-range</property>
                            <value>1</value>
                        </equals>
                    </and>
                    <equals>
                        <property>/instrumentation/dead-reckoner/reset</property>
                        <value>1</value>
                    </equals>
                </or>
            </condition>
        </enable>
        <input>
            <value>0</value>
        </input>
        <output>/instrumentation/dead-reckoner/distance-adjust</output>
    </filter>

    <!-- final output -->

    <filter>
        <type>gain</type>
        <gain>1</gain>
        <input>
            <property>/instrumentation/dead-reckoner/internal/azimuth</property>
        </input>
        <output>/instrumentation/dead-reckoner/azimuth</output>
    </filter>

    <filter>
        <type>gain</type>
        <gain>1</gain>
        <input>
            <property>/instrumentation/dead-reckoner/internal/distance</property>
        </input>
        <output>/instrumentation/dead-reckoner/distance</output>
    </filter>

</PropertyList>